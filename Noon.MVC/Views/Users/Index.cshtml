@model IEnumerable<AliExpress.Dtos.User.UserDTO>
@using Microsoft.Extensions.Localization
@using Noon.MVC.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@inject IViewLocalizer _localizer

@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Users Page";
    Layout = "_navbarLayout";
    var lan = "";
    var direction = "";
    var sessionData = Context.Session.GetString("Culture");
    var culture = System.Threading.Thread.CurrentThread.CurrentCulture.Name;
    if (!string.IsNullOrEmpty(sessionData))
    {
        if (sessionData.StartsWith("en"))
        {
            lan = "ar";
            direction = "rtl";
        }
        else
        {
            lan = "en";
            direction = "ltr";
        }
    }
}

<h1>@_localizer["Users Page"]</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                @_localizer["Id"]
            </th>
            <th>
                @_localizer["UserName"]
            </th>
            <th>
                @_localizer["Email"]
            </th>
            <th>
                @_localizer["PhoneNumber"]
            </th>
            <th>
                @_localizer["Country"]
              
            </th>
            <th>
                @_localizer["City"]
               
            </th>
            <th>
                @_localizer["Status"]
                
            </th>
            <th>@_localizer["Actions2"]</th>
            <th>@_localizer["Actions1"]</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {


            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>
                    <td>
                        @{
                            if (!string.IsNullOrEmpty(sessionData))
                            {
                                if (sessionData.StartsWith("en"))
                                {
                                    // Display English properties
                                    @Html.DisplayFor(modelItem => item.Country)
                                }
                                else if (sessionData.StartsWith("ar"))
                                {
                                    // Display Arabic properties
                                    @Html.DisplayFor(modelItem => item.Country_AR)
                                
                                }
                                else
                                {
                                    // Default to English if the language is not specified or supported
                                    @Html.DisplayFor(modelItem => item.Country)
                                }
                            }
                            else
                            {
                                // Default to English if culture parameter is not provided in the query string
                                @Html.DisplayFor(modelItem => item.Country)
                            }
                        }
                        @Html.DisplayFor(modelItem => item.Country)
                    </td>
                    <td>
                        @{
                            if (!string.IsNullOrEmpty(sessionData))
                            {
                                if (sessionData.StartsWith("en"))
                                {
                                    // Display English properties
                                    @Html.DisplayFor(modelItem => item.City)
                                }
                                else if (sessionData.StartsWith("ar"))
                                {
                                    // Display Arabic properties
                                    @Html.DisplayFor(modelItem => item.City_AR)
                                }
                                else
                                {
                                    // Default to English if the language is not specified or supported
                                    @Html.DisplayFor(modelItem => item.City)
                                }
                            }
                            else
                            {
                                // Default to English if culture parameter is not provided in the query string
                                @Html.DisplayFor(modelItem => item.City)
                            }
                        }
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    @if(item.Deactivate==false)
                    {
                        <td>

                            @_localizer["Active"]
                        </td>
                    }
                    else
                    {
                        <td>
                            @_localizer["Deactivate"]
                        </td>
                    }


                    <td>
                        @{
                            var Activate = _localizer["Active"];
                        }
                        @Html.ActionLink(Activate.Value, "Activate", new { id = item.Id }, new { @class = "btn btn-success" })
                    </td>
                    <td>
                        @{
                            var Deactivate = _localizer["Deactivate"];
                        }
                        @Html.ActionLink(Deactivate.Value, "Deactivate", new { id = item.Id }, new { @class = "btn btn-danger" })
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


