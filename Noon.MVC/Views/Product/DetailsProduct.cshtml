@model AliExpress.Dtos.Product.CreateUpdateDeleteProductDto

@{
    ViewData["Title"] = "DetailsProduct";
    var Cat = ViewBag.Category;
}

<style>
    .container {
        max-width: 800px;
        margin: 20px auto;
        padding: 20px;
        background-color: #f9f9f9;
        border: 1px solid #e0e0e0;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    h1 {
        color: #333;
        text-align: center;
        margin-bottom: 30px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    dl.row {
        margin-bottom: 30px;
    }

        dl.row dt {
            font-weight: bold;
            margin-bottom: 10px;
        }

        dl.row dd {
            margin-left: 0;
            margin-bottom: 20px;
            font-size: 16px;
            color: #555;
        }

    .back-btn {
        text-align: center;
        margin-top: 20px;
    }

        .back-btn a {
            text-decoration: none;
            color: #fff;
            background-color: #007bff;
            padding: 12px 24px;
            border-radius: 5px;
            transition: background-color 0.3s ease;
            font-size: 16px;
            font-weight: bold;
            display: inline-block;
        }

            .back-btn a:hover {
                background-color: #0056b3;
            }

    .product-images-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-bottom: 20px;
    }

    .product-image {
        width: 150px;
        height: 150px;
        object-fit: cover;
        margin: 5px;
        border: 1px solid #ced4da;
        border-radius: 5px;
    }
</style>


<h1>DetailsProduct</h1>

<div>
    <hr />
    <dl class="row">
        <div class="product-images">
            @if (Model.Images != null && Model.Images.Any())
            {
                foreach (var imagePath in Model.Images)
                {
                    string formattedImagePath = "http://localhost:5108" + imagePath.Replace("\\", "/");
                    <img src="@Url.Content(formattedImagePath)" class="product-image" alt="Product Image" />

                }


            }
        </div>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Id)
        </dd>


        @if (!string.IsNullOrEmpty(Model.Title))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Title)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Title)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Description))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Description)
            </dd>
        }

        @if (Model.Price != null)
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Price)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Price)
            </dd>
        }


        @if (Model.Quantity != null)
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Quantity)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Quantity)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.ShippingMethod))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ShippingMethod)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ShippingMethod)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.PlaceOfOrigin))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.PlaceOfOrigin)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.PlaceOfOrigin)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.ModelNumber))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ModelNumber)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ModelNumber)
            </dd>
        }
        @if (Model.LensWidth != null)
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.LensWidth)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.LensWidth)
            </dd>
        }

        @if (Model.LensHeight != null)
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.LensHeight)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.LensHeight)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.LensMaterial))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.LensMaterial)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.LensMaterial)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Department))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Department)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Department)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Gender))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Gender)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Gender)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.FrameMaterial))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.FrameMaterial)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.FrameMaterial)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.LensFeatures))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.LensFeatures)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.LensFeatures)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Style))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Style)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Style)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.BrandName))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.BrandName)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.BrandName)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Origin))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Origin)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Origin)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.ItemType))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ItemType)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ItemType)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.EyewearType))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.EyewearType)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.EyewearType)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Certification))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Certification)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Certification)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.FrameColor))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.FrameColor)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.FrameColor)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.LensColor))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.LensColor)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.LensColor)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.LensAttributes))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.LensAttributes)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.LensAttributes)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.UsageScope))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.UsageScope)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.UsageScope)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.SuitableFaceShapes))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.SuitableFaceShapes)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.SuitableFaceShapes)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.SunglassesStyle))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.SunglassesStyle)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.SunglassesStyle)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.CompanyHistory))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.CompanyHistory)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.CompanyHistory)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.Brand))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Brand)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Brand)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.CommunicationType))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.CommunicationType)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.CommunicationType)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.SetType))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.SetType)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.SetType)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Transmitter))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Transmitter)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Transmitter)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Use))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Use)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Use)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.ChargingTime))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ChargingTime)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ChargingTime)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.WorkingHours))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.WorkingHours)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.WorkingHours)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.TransmissionDistance))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.TransmissionDistance)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.TransmissionDistance)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Features))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Features)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Features)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.Accessories))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Accessories)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Accessories)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.BandLength))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.BandLength)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.BandLength)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.BandWidth))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.BandWidth)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.BandWidth)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Weight))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Weight)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Weight)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.SimCardSlot))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.SimCardSlot)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.SimCardSlot)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.BuiltInVoiceAssistant))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.BuiltInVoiceAssistant)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.BuiltInVoiceAssistant)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.BluetoothVersion))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.BluetoothVersion)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.BluetoothVersion)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.WiFi))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.WiFi)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.WiFi)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.MeasurementScales))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.MeasurementScales)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.MeasurementScales)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.ActivityTracking))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ActivityTracking)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ActivityTracking)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.Touchscreen))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Touchscreen)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Touchscreen)
            </dd>
        }

       

        @if (!string.IsNullOrEmpty(Model.AppName))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.AppName)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.AppName)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.ScreenMaterial))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ScreenMaterial)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ScreenMaterial)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.CPUModel))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.CPUModel)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.CPUModel)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.Detachable))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Detachable)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Detachable)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.AppDownloadAvailable))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.AppDownloadAvailable)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.AppDownloadAvailable)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.RemovableBattery))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.RemovableBattery)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.RemovableBattery)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.CPUManufacturer))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.CPUManufacturer)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.CPUManufacturer)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Resolution))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Resolution)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Resolution)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.ScreenSize))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ScreenSize)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ScreenSize)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.MovementType))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.MovementType)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.MovementType)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.AgeCategoryApp))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.AgeCategoryApp)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.AgeCategoryApp)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.ScreenShape))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ScreenShape)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ScreenShape)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.CaseMaterial))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.CaseMaterial)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.CaseMaterial)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.StrapMaterial))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.StrapMaterial)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.StrapMaterial)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.WaterproofRating))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.WaterproofRating)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.WaterproofRating)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.AvailableSimCard))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.AvailableSimCard)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.AvailableSimCard)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Mechanism))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Mechanism)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Mechanism)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.MultiFace))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.MultiFace)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.MultiFace)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.GPS))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.GPS)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.GPS)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.NetworkMode))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.NetworkMode)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.NetworkMode)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.BatteryCapacity))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.BatteryCapacity)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.BatteryCapacity)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.RearCamera))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.RearCamera)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.RearCamera)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.ROM))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.ROM)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.ROM)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.System))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.System)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.System)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Type))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Type)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Type)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Compatibility))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Compatibility)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Compatibility)
            </dd>
        }
        @if (!string.IsNullOrEmpty(Model.Language))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Language)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Language)
            </dd>
        }

        @if (!string.IsNullOrEmpty(Model.Functionality))
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Functionality)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Functionality)
            </dd>
        }

    </dl>
</div>
<div class="back-btn">
    <a asp-action="Index">Back to List</a>
</div>
</div>