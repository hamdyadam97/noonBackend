@using Microsoft.Extensions.Localization
@using Noon.MVC.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@inject IViewLocalizer _localizer
@model IEnumerable<AliExpress.Dtos.Product.ProductViewDto>
@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Products";
    Layout = "_navbarLayout";
    var lan = "";
    var direction = "";
    var sessionData = Context.Session.GetString("Culture");
    var culture = System.Threading.Thread.CurrentThread.CurrentCulture.Name;
    System.Threading.Thread.CurrentThread.CurrentCulture = new CultureInfo("en-US"); ;
    if (!string.IsNullOrEmpty(culture))
    {

        if (culture.StartsWith("ar"))
        {

            lan = "ar";
            direction = "rtl";
        }
        else
        {
            lan = "en";
            direction = "ltr";
        }
    }
}
<h1>@_localizer["Products"]</h1>
<p>
    <a asp-action="Create">@_localizer["Create"]</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>

                @_localizer["Title"]
            </th>
            <th>
                @_localizer["Description"]
            </th>
            <th>
                @_localizer["Price"]
            </th>
            <th>
                @_localizer["Actions"]
            </th>


        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                <tr>

                    @{
                        if (!string.IsNullOrEmpty(culture))
                        {
                            if (culture.StartsWith("en"))
                            {
                                // Display English properties
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            }
                            else if (culture.StartsWith("ar"))
                            {
                                // Display Arabic properties
                                <td>@Html.DisplayFor(modelItem => item.Title_AR)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description_AR)</td>
                            }
                            else
                            {
                                // Default to English if the language is not specified or supported
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            }
                        }
                        else
                        {
                            // Default to English if culture parameter is not provided in the query string
                            <td>@Html.DisplayFor(modelItem => item.Title)</td>
                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        }
                    }



                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>

                    <td>

                        @{
                            var editLocalized = _localizer["Edit"];
                        }

                        @Html.ActionLink(editLocalized.Value, "Edit", new { id = item.Id })


                        |@{
                            var DetailsProduct = _localizer["DetailsProduct"];
                        }

                        @Html.ActionLink(DetailsProduct.Value, "DetailsProduct", new { id = item.Id })|



                        @* <a href="@Url.Action("SfotDelete", "Product", new { id = item.Id })" class="btn btn-danger deactivate-btn">@_localizer["Delete"]</a> *@

                        <a href="#" onclick="return confirmDelete('@_localizer["Areyousureyouwanttodeletehisproduct"]', @item.Id)" class="btn btn-danger deactivate-btn">@_localizer["Delete"]</a>

                        <script>
                            function confirmDelete(message, productId) {
                                if (confirm(message)) {
                                    window.location.href = '@Url.Action("SoftDelete", "Product")' + '?id=' + productId;
                                }
                                return false;
                            }
                        </script>





                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@{
    // var culture = System.Threading.Thread.CurrentThread.CurrentCulture.Name;
    int currentPage = ViewBag.CurrentPage ?? 1;
}
@{
    var Next = _localizer["Next"];
}
@{
    var Previous = _localizer["Previous"];
}

<div class="btn-group btn btn-success">
    @Html.ActionLink(Next.Value, "Next", new { page = currentPage + 1, culture = culture }, new { @class = "btn btn-success" })
</div>

<div class="btn-group btn btn-success">
    @Html.ActionLink(Previous.Value, "Previous", new { page = currentPage - 1, culture = culture }, new { @class = "btn btn-success" })
</div>
